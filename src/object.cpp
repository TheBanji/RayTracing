////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "object.hpp"

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Object::Object(Material * material) : _material(material) {}

Object::~Object() {
    if(!_material) {
        delete _material;
    }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Color Object::getColor(const Ray& ray, const Point& intersectionPoint, Ray& scatteredRay) const {
    Color attenuation;
    if(_material != nullptr && _material->scatter(ray, intersectionPoint, this->normal(intersectionPoint), scatteredRay, attenuation)) {
        return attenuation;
    }
    return Color::Black;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////